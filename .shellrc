#!/bin/sh

# Return if not interactive
[ -z "$PS1" ] && return

# Environment Vars
export GOPATH="$HOME/.go"
export PATH="$PATH:$HOME/usr/local/bin:$HOME/.cargo/bin/:$HOME/.local/bin:$HOME/.go/bin:$HOME/Dotfiles/Bin"
[ -d "/usr/local/homebrew" ] && PATH="$PATH:/usr/local/homebrew/bin"
export XDG_CONFIG_HOME="$HOME/.config"

if [ -d "$HOME/.emacs.d/bin" ]; then
    export PATH="$PATH:$HOME/.emacs.d/bin"
fi

if [ -d "$HOME/.config/emacs/bin" ]; then
    export PATH="$PATH:$HOME/.config/emacs/bin"
fi

# Nice functions
# DEBUG=t
info() {
    [ -z "$DEBUG" ] ||
        printf "[%s]:$1\n" "$(date +'%D %T')";
}

try_alias() {
    COMMAND=$2
    NAME=$1
    shift; shift;
    if command -v "${COMMAND}" > /dev/null 2>&1; then
        info "${COMMAND} found making ${NAME} point to ${COMMAND} $*"
        alias ${NAME}="${COMMAND} $*"
    else
        return 1
    fi
}

try() {
    if command -v "$1" > /dev/null 2>&1; then
        info "Found $1 and running it"
        eval "$*"
    else
        return $?
    fi
}

# overloading cd to run commands if requirements are reached
cd() {
    builtin cd "$@" || return
    [ -d ".git" ] && try onefetch
    return 0
}

try_alias ls exa
try_alias la ls -a
try_alias ll ls -lhF --color=always --time-style=full-iso
try_alias cat bat
try_alias find fd
try_alias vim nvim
try_alias vi vim
try_alias e "${EDITOR:-vi}"

# Some nice keybindings and aliases
alias sudo="sudo "

# System Shutdown stuff
alias rb="sudo reboot"
alias sd="sudo shutdown -h now"

## im lazy xd ##
alias kill-skyrim="env WINEPREFIX=$HOME/.local/share/Steam/steamapps/compatdata/72850/pfx wineserver -k"
alias kill-sse="env WINEPREFIX=$HOME/Games/SSE/pfx wineserver -k"
alias vortex="WINEPREFIX=\"$HOME/Games/vortex\" /home/genzix/.local/share/lutris/runners/wine/tkg-4.0-x86_64/bin/wine /home/genzix/Games/vortex/drive_c/Program\ Files/Black\ Tree\ Gaming\ Ltd/Vortex/Vortex.exe"
alias kill-vortex="WINEPREFIX=\"$HOME/Games/vortex\" wineserver -k"

# Check the shell and run shell specific commands there
# note that some of this isnt posix but it is "posix" for
# the shell specified
if [ -n "$BASH_VERSION" ]; then 
    info "Your using bash"
    dir=$(dirname -- "$(readlink "$HOME/.bashrc")")
    . "${dir}/.bashrc"
elif [ -n "$ZSH_VERSION" ]; then
    info "Your using zsh $0"
    dir=$(dirname -- "$(readlink "$HOME/.zshrc")")
    . "${dir}/.zshrc"
else
    info "Finish shellrc"
    export PS1="\$ "
fi

# [ -n $GUIX_PROFILE ] && . "$GUIX_PROFILE/etc/profile"
export NIX_AUTO_RUN=1
